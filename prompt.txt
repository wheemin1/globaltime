SkillNavigator 프로젝트 구조 및 분석
🏗️ 프로젝트 개요
TimeSync - 팀 미팅 시간 조율을 위한 실시간 웹 애플리케이션으로, 여러 참가자들의 가용 시간을 수집하고 시각화하여 최적의 미팅 시간을 찾아주는 도구입니다.

📁 프로젝트 구조
1. 전체 아키텍처
SkillNavigator/
├── client/          # React 프론트엔드
├── server/          # Express.js 백엔드
├── shared/          # 공유 타입 정의 및 스키마
└── attached_assets/ # 첨부 자산
2. 기술 스택
프론트엔드
React 18 + TypeScript
Vite (번들러)
Tailwind CSS (스타일링)
shadcn/ui (UI 컴포넌트 라이브러리)
Wouter (라우팅)
TanStack React Query (상태 관리 및 API 캐싱)
React Hook Form (폼 관리)
Zod (스키마 검증)
date-fns (날짜 처리)
Framer Motion (애니메이션)
Lucide React (아이콘)
백엔드
Express.js + TypeScript
Drizzle ORM (데이터베이스 ORM)
PostgreSQL (데이터베이스)
Zod (스키마 검증)
WebSocket (실시간 통신용 준비)
개발 도구
ESBuild (서버 빌드)
tsx (TypeScript 실행)
Drizzle Kit (데이터베이스 마이그레이션)
🗃️ 데이터베이스 스키마
Tables
rooms - 미팅룸 정보

id: 고유 ID
name: 룸 이름
hostId: 호스트 ID
startDate, endDate: 미팅 가능 기간
timeStart, timeEnd: 하루 중 미팅 가능 시간대 (0-23시)
isConfirmed: 미팅 시간 확정 여부
confirmedSlot: 확정된 슬롯 인덱스
participants - 참가자 정보

id: 참가자 고유 ID
roomId: 소속 룸 ID
name: 참가자 이름
timezone: 참가자 시간대
availability: 168비트 문자열 (7일×24시간)
🔧 핵심 기능 및 로직
1. 시간 슬롯 시스템
168개 슬롯: 7일 × 24시간 = 168개의 시간 슬롯
비트맵 저장: 각 참가자의 가용성을 168자리 문자열로 저장 ("1"=가능, "0"=불가능)
히트맵 생성: 각 슬롯별 가능한 참가자 수를 계산하여 시각화
2. 타임존 처리
모든 참가자의 개별 타임존 지원
실시간 타임존 변환 및 표시
timezone-utils.ts에서 타임존 계산 로직 처리
3. 드래그 선택 기능
use-drag-selection.ts 훅을 통한 드래그 앤 드롭 시간 선택
마우스 이벤트를 통한 연속 시간 슬롯 선택
🎨 UI/UX 컴포넌트
주요 컴포넌트
TimeGrid - 시간 선택/히트맵 표시 그리드
HeatmapResults - 결과 히트맵 및 최적 시간 표시
ParticipantPanel - 참가자 목록 및 관리
TimezoneSelector - 타임존 선택기
shadcn/ui 컴포넌트 활용
40개 이상의 UI 컴포넌트 (Button, Card, Dialog, Input 등)
일관된 디자인 시스템
접근성을 고려한 설계
🔄 상태 관리
React Query 활용
API 요청 캐싱 및 상태 관리
낙관적 업데이트
에러 처리 및 재시도
로컬 상태
useState를 통한 컴포넌트 상태 관리
드래그 선택, 모달 상태, 현재 뷰 등
🌐 API 엔드포인트
REST API
POST /api/rooms - 룸 생성
GET /api/rooms/:id - 룸 정보 조회
POST /api/rooms/:id/join - 룸 참가
PUT /api/rooms/:roomId/participants/:participantId - 가용성 업데이트
POST /api/rooms/:id/confirm - 시간 확정 (호스트만)
GET /api/rooms/:id/slots/:slotIndex - 특정 슬롯 정보
📱 반응형 디자인
모바일 최적화
모바일에서는 탭 기반 네비게이션
터치 친화적인 인터페이스
use-mobile.tsx 훅으로 화면 크기 감지
데스크톱
사이드바 레이아웃
더 넓은 시간 그리드 표시
🔐 보안 및 권한
호스트 권한
룸 생성자만 미팅 시간 확정 가능
hostId를 통한 권한 검증
참가자 관리
고유 ID 생성 (nanoid 사용)
세션 기반 참가자 식별
🚀 빌드 및 배포
개발 환경
Vite 개발 서버
HMR (Hot Module Replacement)
TypeScript 타입 체크
프로덕션 빌드
클라이언트: Vite 빌드
서버: ESBuild를 통한 번들링
단일 포트(5000)에서 서빙
📊 비즈니스 로직
최적 시간 찾기 알고리즘
각 슬롯별 참가자 수 계산
참가자 수가 많은 순으로 정렬
동일한 참가자 수일 경우 시간 순으로 정렬
상위 결과를 "Best Time Slots"로 제시
데이터 흐름
호스트가 룸 생성
참가자들이 개별 가용성 입력
실시간으로 히트맵 업데이트
호스트가 최적 시간 확정
확정된 시간 공유 및 캘린더 파일 생성
🔧 개발 도구 및 설정
TypeScript 설정
엄격한 타입 체크
절대 경로 임포트 지원
공유 타입 정의
Tailwind CSS
유틸리티 기반 스타일링
커스텀 CSS 변수 활용
다크 모드 지원 준비
이 프로젝트는 현대적인 웹 개발 스택을 활용하여 실용적인 팀 협업 도구를 구현한 잘 설계된 애플리케이션입니다. 특히 타임존 처리, 드래그 선택, 히트맵 시각화 등의 복잡한 기능들이 사용자 친화적인 인터페이스로 잘 구현되어 있습니다.